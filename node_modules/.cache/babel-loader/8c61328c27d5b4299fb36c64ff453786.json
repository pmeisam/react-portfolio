{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _animatedScrollTo = _interopRequireDefault(require(\"../utils/animated-scroll-to\"));\n\nvar _isMobile = _interopRequireDefault(require(\"../utils/is-mobile\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar _Slide = _interopRequireDefault(require(\"./Slide\"));\n\nvar _Controls = _interopRequireDefault(require(\"./Controls\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar scrollMode = {\n  FULL_PAGE: 'full-page',\n  NORMAL: 'normal'\n};\n\nvar FullPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullPage, _React$Component);\n\n  function FullPage(props) {\n    var _this;\n\n    _classCallCheck(this, FullPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullPage).call(this, props));\n\n    _this.onResize = function () {\n      _this._slides = [];\n\n      for (var i = 0; i < _this._slidesCount; i++) {\n        _this._slides.push(window.innerHeight * i);\n      }\n\n      _this.setState({\n        height: window.innerHeight\n      });\n    };\n\n    _this.onTouchStart = function (evt) {\n      _this._touchStart = evt.touches[0].clientY;\n      _this._isScrolledAlready = false;\n    };\n\n    _this.onTouchMove = function (evt) {\n      if (_this.props.scrollMode !== scrollMode.FULL_PAGE) {\n        return;\n      }\n\n      evt.preventDefault();\n      var touchEnd = evt.changedTouches[0].clientY;\n\n      if (!_this._isScrollPending && !_this._isScrolledAlready) {\n        if (_this._touchStart > touchEnd + _this._touchSensitivity) {\n          _this.scrollToSlide(_this.state.activeSlide + 1);\n        } else if (_this._touchStart < touchEnd - _this._touchSensitivity) {\n          _this.scrollToSlide(_this.state.activeSlide - 1);\n        }\n      }\n    };\n\n    _this.onScroll = function (evt) {\n      if (_this.props.scrollMode !== scrollMode.FULL_PAGE) {\n        return;\n      }\n\n      evt.preventDefault();\n\n      if (_this._isScrollPending) {\n        return;\n      }\n\n      var scrollDown = (evt.wheelDelta || -evt.deltaY || -evt.detail) < 0;\n      var activeSlide = _this.state.activeSlide;\n\n      if (scrollDown) {\n        activeSlide++;\n      } else {\n        activeSlide--;\n      }\n\n      _this.scrollToSlide(activeSlide);\n    };\n\n    _this.getSlidesCount = function () {\n      return _this._slidesCount;\n    };\n\n    _this.getCurrentSlideIndex = function () {\n      return _this.state.activeSlide;\n    };\n\n    _this.scrollNext = function () {\n      _this.scrollToSlide(_this.state.activeSlide + 1);\n    };\n\n    _this.scrollPrev = function () {\n      _this.scrollToSlide(_this.state.activeSlide - 1);\n    };\n\n    _this.scrollToSlide = function (slide) {\n      if (!_this._isScrollPending && slide >= 0 && slide < _this._slidesCount) {\n        var currentSlide = _this.state.activeSlide;\n\n        _this.props.beforeChange({\n          from: currentSlide,\n          to: slide\n        });\n\n        _this.setState({\n          activeSlide: slide\n        });\n\n        _this._isScrollPending = true;\n        (0, _animatedScrollTo.default)(_this._slides[slide], _this.props.duration, function () {\n          _this._isScrollPending = false;\n          _this._isScrolledAlready = true;\n\n          _this.props.afterChange({\n            from: currentSlide,\n            to: slide\n          });\n        });\n      }\n    };\n\n    _this._isScrollPending = false;\n    _this._isScrolledAlready = false;\n    _this._slides = [];\n    _this._slidesCount = FullPage.getChildrenCount(_this.props.children);\n    _this._touchSensitivity = 5;\n    _this._touchStart = 0;\n    _this._isMobile = null;\n    _this.state = {\n      activeSlide: props.initialSlide\n    };\n    return _this;\n  }\n\n  _createClass(FullPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMobile = (0, _isMobile.default)();\n\n      if (this._isMobile) {\n        document.addEventListener('touchmove', this.onTouchMove, {\n          passive: false\n        });\n        document.addEventListener('touchstart', this.onTouchStart);\n      } else {\n        document.addEventListener('wheel', this.onScroll, {\n          passive: false\n        });\n      }\n\n      window.addEventListener('resize', this.onResize);\n      this.onResize();\n      this.scrollToSlide(this.props.initialSlide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isMobile) {\n        document.removeEventListener('touchmove', this.onTouchMove);\n        document.removeEventListener('touchstart', this.onTouchStart);\n      } else {\n        document.removeEventListener('wheel', this.onScroll);\n      }\n\n      window.removeEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"renderControls\",\n    value: function renderControls() {\n      var _this$props = this.props,\n          controls = _this$props.controls,\n          controlsProps = _this$props.controlsProps;\n\n      if (!controls) {\n        return null;\n      }\n\n      var controlsBasicProps = {\n        getCurrentSlideIndex: this.getCurrentSlideIndex,\n        onNext: this.scrollNext,\n        onPrev: this.scrollPrev,\n        scrollToSlide: this.scrollToSlide,\n        slidesCount: this.getSlidesCount()\n      };\n\n      if (controls === true) {\n        return _react.default.createElement(_Controls.default, _extends({\n          className: \"full-page-controls\"\n        }, controlsBasicProps, controlsProps));\n      }\n\n      var CustomControls = controls;\n      return _react.default.createElement(CustomControls, _extends({}, controlsBasicProps, controlsProps));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        style: {\n          height: this.state.height\n        }\n      }, this.renderControls(), this.props.children);\n    }\n  }]);\n\n  return FullPage;\n}(_react.default.Component);\n\nexports.default = FullPage;\nFullPage.propTypes = {\n  afterChange: _propTypes.default.func,\n  beforeChange: _propTypes.default.func,\n  children: _propTypes.default.node.isRequired,\n  controls: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.element, _propTypes.default.func]),\n  controlsProps: _propTypes.default.object,\n  duration: _propTypes.default.number,\n  initialSlide: _propTypes.default.number,\n  scrollMode: _propTypes.default.oneOf((0, _helpers.getObjectValues)(scrollMode))\n};\nFullPage.defaultProps = {\n  afterChange: function afterChange() {},\n  beforeChange: function beforeChange() {},\n  controls: false,\n  controlsProps: {},\n  duration: 700,\n  initialSlide: 0,\n  scrollMode: scrollMode.FULL_PAGE\n};\n\nFullPage.getChildrenCount = function (children) {\n  var childrenArr = _react.default.Children.toArray(children);\n\n  var slides = childrenArr.filter(function (_ref) {\n    var type = _ref.type;\n    return type === _Slide.default;\n  });\n  return slides.length;\n};","map":null,"metadata":{},"sourceType":"script"}